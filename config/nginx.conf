user www-data;
# Default is nobody, PHP-FPM uses www-data.

worker_processes auto;
# Default is auto, but you can use numbers too, like 2 for Dual-core CPU, 4 for Quad-core CPU. If you know how many CPU cores the server have, better add that as a number.

worker_rlimit_nofile 100000;
# Number of file descriptors used for nginx. This line is not available in default installation and need to add manually. The limit for the maximum FDs on the server is usually set by the OS itself. If you don't set file descriptors then OS settings will be used, which is by default 2000.

error_log logs/error.log;
# Log the errors.

pid logs/nginx.pid;
# Process Identification Number (PID) for Nginx.

events {
    worker_connections 2048;
    # Default is 1024, or 1024 x CPU Core/s.

    use epoll;
    # Don't use it.
    # Optimized to serve many clients with each thread.
    # Essential for Linux --for test environment.

    multi_accept on;
    # Don't use it.
    # Accept as many connections as possible, may flood worker connections if set too low --used for testing environment.
}

http {
    include /etc/nginx/mime.types;
    # Add all known mime (file extension) types in Nginx.

    default_type application/octet-stream;
    # When the type is unknown, the "octet-stream" subtype is used to indicate that a body contains arbitrary binary data.

    access_log off;
    # Default is on, useful in test environment, but disable it to boost I/O on storage.

    sendfile on;
    # Default is on, it copies data between one FD and other from within the kernel, which is faster than read() + write().

    tcp_nopush on;
    # Send headers in one piece, it is better than sending them one by one.

    tcp_nodelay on;
    # Don't buffer data sent, good for small data bursts in real time.

    keepalive_timeout 65;
    # Keep the connection open for default 65 seconds, you can increase or decrease according to your need.

    gzip on;
    # Reduce the data that needs to be sent over network. It needs further customization, see below.
    gzip_min_length 10240;
    gzip_comp_level 1;
    # Set compression level 1 to 9, more levels = more CPU overhead. 4 to 6 is the best compression anything over 6 wasted CPU efforts. Keep it low (like: 1 to 3) if hardware is low-end.
    gzip_vary on;
    gzip_types
    # text/html is always compressed by HttpGzipModule.
        text/css application/javascript;

    include /etc/nginx/conf.d/*.conf;
    # Load the server configuration file.
}

